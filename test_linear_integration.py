#!/usr/bin/env python3
"""Test script to verify Linear integration setup."""

import os
import sys
from pathlib import Path

# Add the project root to Python path
sys.path.insert(0, str(Path(__file__).parent))

from rca.linear_client import load_linear_config, create_linear_ticket
from rca.schema import TicketData


def test_configuration():
    """Test Linear configuration."""
    print("🔍 Testing Linear Configuration...")
    
    config = load_linear_config()
    
    print(f"📋 API Key: {'✅ SET' if config['api_key'] else '❌ NOT SET'}")
    print(f"📋 Team Key: {config['team_key']}")
    
    if config['api_key']:
        print(f"🔑 API Key starts with: {config['api_key'][:10]}...")
        return True
    else:
        print("⚠️  No API key found - will create mock tickets")
        return False


def test_ticket_creation():
    """Test creating a Linear ticket."""
    print("\n🎫 Testing Ticket Creation...")
    
    # Create test ticket data
    ticket_data = TicketData(
        title="[TEST] RCA Agent Integration Test",
        description="""## Test Ticket

This is a test ticket created by the RCA Agent to verify Linear integration.

### Test Details
- **Purpose:** Verify Linear API integration
- **Created by:** RCA Agent test script
- **Status:** This is a test - can be deleted

### Next Steps
- [ ] Verify ticket appears in Linear workspace
- [ ] Check ticket has correct team assignment
- [ ] Confirm description formatting is correct
- [ ] Delete this test ticket

_This ticket was auto-generated by RCA Agent test script_""",
        team_key="FTS",  # Default team key
        priority=2,  # Medium priority
        labels=["test", "rca-agent", "integration"],
        assignee=None
    )
    
    # Create the ticket
    result = create_linear_ticket(ticket_data)
    
    # Display results
    if result['success']:
        print(f"✅ Ticket created successfully!")
        print(f"📋 Ticket ID: {result['ticket_id']}")
        print(f"🔗 Ticket URL: {result['ticket_url']}")
        print(f"📁 Type: {result['type']}")
        
        if result['type'] == 'mock':
            print(f"📄 Mock file: {result.get('file_path', 'N/A')}")
            print("💡 To create real tickets, add your LINEAR_API_KEY to .env file")
        else:
            print("🎉 Real Linear ticket created! Check your Linear workspace.")
            
    else:
        print(f"❌ Failed to create ticket: {result['error']}")
        return False
    
    return True


def main():
    """Main test function."""
    print("🚀 RCA Agent Linear Integration Test\n")
    
    # Test 1: Configuration
    has_api_key = test_configuration()
    
    # Test 2: Ticket Creation
    success = test_ticket_creation()
    
    # Summary
    print("\n" + "="*50)
    print("📊 Test Summary:")
    print(f"🔧 Configuration: {'✅ PASS' if True else '❌ FAIL'}")
    print(f"🎫 Ticket Creation: {'✅ PASS' if success else '❌ FAIL'}")
    
    if has_api_key and success:
        print("\n🎉 All tests passed! Linear integration is working correctly.")
        print("💡 You can now create real Linear tickets with the RCA Agent.")
    elif success:
        print("\n⚠️  Tests passed in mock mode.")
        print("💡 Add your LINEAR_API_KEY to .env to create real tickets.")
    else:
        print("\n❌ Some tests failed. Check the error messages above.")
        return 1
    
    print("\n📚 Next steps:")
    print("1. Run: python -m rca.cli ticket incidents/TCK-1001.json --team YOUR_TEAM")
    print("2. Check your Linear workspace for the ticket")
    print("3. Verify the ticket content and formatting")
    
    return 0


if __name__ == "__main__":
    sys.exit(main())
